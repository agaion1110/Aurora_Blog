export const pagesRoutes = [
  ["v-8daa1a0e","/",{"y":"h","t":"主页","i":"home"},["/index.html","/README.md"]],
  ["v-21b02116","/%E6%96%87%E7%AB%A0/intro.html",{"e":"<h1> 介绍页</h1>\n<p>命运负责洗牌和发牌，而我们只能出牌。 --人生的智慧</p>\n","y":"a","t":"介绍页","i":"info"},["/文章/intro.html","/%E6%96%87%E7%AB%A0/intro","/文章/intro.md","/%E6%96%87%E7%AB%A0/intro.md"]],
  ["v-9fac680a","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/AJAX/AJAX.html",{"d":"2022-06-23T00:00:00.000Z","l":"2022年6月23日","c":["js","学习笔记"],"g":["笔记","AJAX请求"],"u":false,"e":"<h1> AJAX总结笔记</h1>\n<h2> 1，什么是 AJAX</h2>\n<p>AJAX = <em>A</em>synchronous <em>J</em>avaScript <em>A</em>nd <em>X</em>ML。AJAX 并非编程语言！</p>\n<p>AJAX 仅仅组合了：</p>\n<ul>\n<li>浏览器内建的 XMLHttpRequest 对象（从 web 服务器请求数据）</li>\n<li>JavaScript 和 HTML DOM（显示或使用数据）</li>\n</ul>\n<p>Ajax 是一个令人误导的名称。Ajax 应用程序可能使用 XML 来传输数据，但将数据作为纯文本或 JSON 文本传输也同样常见。</p>\n<blockquote>\n<p>通过 AJAX 可以在浏览器中向服务器发送异步请求，最大的优势：<mark>无刷新获取数据</mark>。AJAX 不是新的编程语言，而是一种将现有的标准组合在一起使用的新方式。</p>\n</blockquote>\n","y":"a","t":"AJAX总结笔记","i":"edit"},["/文章/分类/AJAX/AJAX.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/AJAX/AJAX","/文章/分类/AJAX/AJAX.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/AJAX/AJAX.md"]],
  ["v-f187e33c","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/AJAX/Axios%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.html",{"d":"2023-07-31T00:00:00.000Z","l":"2023年7月31日","c":["js","学习笔记"],"g":["笔记","AJAX请求"],"u":false,"e":"<h1> Axios的基本使用</h1>\n<h2> Axios简介</h2>\n<p>Axios 是一个基于 <em><a href=\"https://javascript.info/promise-basics\" target=\"_blank\" rel=\"noopener noreferrer\">promise</a></em> 网络请求库，作用于<a href=\"https://nodejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\"><code>node.js</code></a> 和浏览器中。在服务端它使用原生 node.js <code>http</code> 模块, 而在客户端 (浏览端) 则使用 XMLHttpRequests。</p>","y":"a","t":"Axios的基本使用","i":"edit"},["/文章/分类/AJAX/Axios的基本使用.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/AJAX/Axios%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8","/文章/分类/AJAX/Axios的基本使用.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/AJAX/Axios%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.md"]],
  ["v-44816efd","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/ECMAScript/es6%E5%B8%B8%E7%94%A8%E7%9F%A5%E8%AF%86%E7%82%B9.html",{"d":"2023-06-23T00:00:00.000Z","l":"2023年6月23日","c":["js","学习笔记","ECMAScript"],"g":["笔记","es6"],"u":false,"e":"<h1> es6常用知识点</h1>\n<p>今天在做项目时用到了...语法来解构赋值，对其中一些细节有些模糊，所以重新复习了一遍。</p>\n","y":"a","t":"es6常用知识点","i":"edit"},["/文章/分类/ECMAScript/es6常用知识点.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/ECMAScript/es6%E5%B8%B8%E7%94%A8%E7%9F%A5%E8%AF%86%E7%82%B9","/文章/分类/ECMAScript/es6常用知识点.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/ECMAScript/es6%E5%B8%B8%E7%94%A8%E7%9F%A5%E8%AF%86%E7%82%B9.md"]],
  ["v-06c2edc3","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/computed%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7.html",{"d":"2023-06-02T00:00:00.000Z","l":"2023年6月2日","c":["vue"],"g":["笔记","前端考核题","面试题"],"u":false,"e":"<h1> Vue中计算属性computed</h1>\n<h2> 什么是计算属性</h2>\n<p>在Vue中，computed属性用于计算某个属性的值，以响应式地更新视图。computed属性是基于它们的依赖进行缓存的，也就是说只有依赖发生变化时，computed属性才会重新计算。</p>\n","y":"a","t":"Vue中计算属性computed","i":"edit"},["/文章/分类/Vue/computed计算属性.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/computed%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7","/文章/分类/Vue/computed计算属性.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/computed%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7.md"]],
  ["v-efb67ada","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E8%80%83%E6%A0%B8%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/%E5%AE%9E%E9%AA%8C%E5%AE%A4%E8%80%83%E6%A0%B8.html",{"d":"2022-09-01T00:00:00.000Z","l":"2022年9月1日","c":["面试考核总结"],"g":["前端考核题","面试题"],"u":true,"e":"<h1> 实验室前端小组考核题目</h1>\n<h2> 一，JS部分</h2>\n<h3> 1.深、浅拷贝的区别？你知道哪些实现深拷贝的方法?</h3>\n","y":"a","t":"实验室前端小组考核题目","i":"edit"},["/文章/分类/考核面试总结/实验室考核.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E8%80%83%E6%A0%B8%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/%E5%AE%9E%E9%AA%8C%E5%AE%A4%E8%80%83%E6%A0%B8","/文章/分类/考核面试总结/实验室考核.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E8%80%83%E6%A0%B8%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/%E5%AE%9E%E9%AA%8C%E5%AE%A4%E8%80%83%E6%A0%B8.md"]],
  ["v-5882512f","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/Promise/Promise%E5%9F%BA%E7%A1%80.html",{"d":"2023-07-20T00:00:00.000Z","l":"2023年7月20日","c":["js"],"g":["Promise","面试题"],"u":true,"e":"<h1> Promise对象</h1>\n<h2> Promise概念</h2>\n<p><strong><code>Promise</code></strong> 对象表示异步操作最终的完成（或失败）以及其结果值。</p>\n<p>一个 <strong><code>Promise</code></strong> 是一个代理，它代表一个在创建 promise 时不一定已知的值。它允许你将处理程序与异步操作的最终成功值或失败原因关联起来。这使得异步方法可以像同步方法一样返回值：异步方法不会立即返回最终值，而是返回一个 <em>promise</em>，以便在将来的某个时间点提供该值。</p>\n<p>一个待定的 Promise <em>最终状态</em>可以是<em>已兑现</em>并返回一个值，或者是<em>已拒绝</em>并返回一个原因（错误）。当其中任意一种情况发生时，通过 Promise 的 <code>then</code> 方法串联的处理程序将被调用。如果绑定相应处理程序时 Promise 已经兑现或拒绝，这处理程序将被立即调用，因此在异步操作完成和绑定处理程序之间不存在竞态条件。</p>\n<p>如果一个 Promise 已经被兑现或拒绝，即不再处于待定状态，那么则称之为已<em>敲定（settled）</em>。</p>\n","y":"a","t":"Promise对象","i":"edit"},["/文章/分类/js/Promise/Promise基础.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/Promise/Promise%E5%9F%BA%E7%A1%80","/文章/分类/js/Promise/Promise基础.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/Promise/Promise%E5%9F%BA%E7%A1%80.md"]],
  ["v-51b31d42","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/Promise/%E6%89%8B%E5%86%99Promise.html",{"d":"2023-07-25T00:00:00.000Z","l":"2023年7月25日","c":["js"],"g":["Promise","面试题"],"u":true,"e":"<h1> 自定义（手写）Promise</h1>\n<p>在写Promise之前，先要熟悉Promise的各种属性和功能函数，然后一步一步去实现。</p>\n<blockquote>\n<p>Promise 是一个类，在实例化这个类的时候需要传递一个执行器executor进去，执行器会立即执行。</p>\n<p>Promise中有三种状态，分别是：<em>待定（pending）</em>、 <em>已兑现（fulfilled）</em> 、<em>已拒绝（rejected）</em>（状态一旦确定不可改变，称之为已<em>敲定（settled）</em>。）</p>\n<p>执行器executor接收两个参数resolve(成功执行的方法)和reject(失败执行的方法)</p>\n<p>Promise拥有then方法，方法内部需判断状态，接收了两个回调函数，如果成功调用成功的回调（onResolve），如果失败调用失败的回调（onReject）。then方法是被定义在原型对象中的。</p>\n<p>Promise拥有catch方法，方法内部只接收失败的回调（onReject）。catch方法也是被定义在原型对象中的。</p>\n</blockquote>\n","y":"a","t":"自定义（手写）Promise","i":"edit"},["/文章/分类/js/Promise/手写Promise.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/Promise/%E6%89%8B%E5%86%99Promise","/文章/分类/js/Promise/手写Promise.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/Promise/%E6%89%8B%E5%86%99Promise.md"]],
  ["v-978de902","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/this_problem/%E6%94%B9%E5%8F%98this%E6%8C%87%E5%90%91.html",{"d":"2023-07-01T00:00:00.000Z","l":"2023年7月1日","c":["js"],"g":["this指向问题","面试题"],"u":true,"e":"<h1> 改变this指向</h1>\n<p>与其他语言相比，<strong>函数的 <code>this</code> 关键字</strong>在 JavaScript 中的表现略有不同，此外，在<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Strict_mode\" target=\"_blank\" rel=\"noopener noreferrer\">严格模式</a>和非严格模式之间也会有一些差别。</p>\n<p>在绝大多数情况下，函数的调用方式决定了 <code>this</code> 的值（运行时绑定）。<code>this</code> 不能在执行期间被赋值，并且在每次函数被调用时 <code>this</code> 的值也可能会不同。ES5 引入了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\" target=\"_blank\" rel=\"noopener noreferrer\">bind</a> 方法来设置函数的 <code>this</code> 值，而不用考虑函数如何被调用的。ES2015 引入了<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions\" target=\"_blank\" rel=\"noopener noreferrer\">箭头函数</a>，箭头函数不提供自身的 this 绑定（<code>this</code> 的值将保持为闭合词法上下文的值）。</p>\n","y":"a","t":"改变this指向","i":"edit"},["/文章/分类/js/this_problem/改变this指向.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/this_problem/%E6%94%B9%E5%8F%98this%E6%8C%87%E5%90%91","/文章/分类/js/this_problem/改变this指向.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/this_problem/%E6%94%B9%E5%8F%98this%E6%8C%87%E5%90%91.md"]],
  ["v-40da31cf","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/this_problem/%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0.html",{"d":"2023-07-02T00:00:00.000Z","l":"2023年7月2日","c":["js"],"g":["this指向问题","面试题"],"u":true,"e":"<h1> 箭头函数中的this指向</h1>\n<blockquote>\n<ol>\n<li>在箭头函数中,this指向,父级程序的this指向</li>\n<li>如果父级程序有this指向,那么箭头函数指向的就是父级程序的this</li>\n<li>如果父级程序没有this指向,那么指向的就是window</li>\n</ol>\n</blockquote>\n","y":"a","t":"箭头函数中的this指向","i":"edit"},["/文章/分类/js/this_problem/箭头函数.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/this_problem/%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0","/文章/分类/js/this_problem/箭头函数.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/this_problem/%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0.md"]],
  ["v-2b07278a","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/JS%E8%AF%BB%E5%8F%96%E5%B1%9E%E6%80%A7%E6%97%B6%E7%94%A8__%E5%92%8C%E7%94%A8.%E7%9A%84%E5%8C%BA%E5%88%AB.html",{"d":"2022-02-20T00:00:00.000Z","l":"2022年2月20日","c":["js"],"g":["js基础","面试题"],"u":false,"e":"<h1> js对象中取属性值用“ . ”和用[ ]的区别</h1>\n<p>对象的属性和方法统称为对象的成员。</p>\n<blockquote>\n<ul>\n<li><strong>在JavaScript中，可以使用“ . ”和“ [ ] ”来访问对象的属性。</strong></li>\n<li><strong>在JavaScript中，只能用“ . ”来访问对象的方法。</strong></li>\n</ul>\n</blockquote>\n","y":"a","t":"js对象中取属性值用“ . ”和用[ ]的区别","i":"edit"},["/文章/分类/js/疑难杂症/JS读取属性时用__和用.的区别.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/JS%E8%AF%BB%E5%8F%96%E5%B1%9E%E6%80%A7%E6%97%B6%E7%94%A8__%E5%92%8C%E7%94%A8.%E7%9A%84%E5%8C%BA%E5%88%AB","/文章/分类/js/疑难杂症/JS读取属性时用[]和用.的区别.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/JS%E8%AF%BB%E5%8F%96%E5%B1%9E%E6%80%A7%E6%97%B6%E7%94%A8%5B%5D%E5%92%8C%E7%94%A8.%E7%9A%84%E5%8C%BA%E5%88%AB.html","/文章/分类/js/疑难杂症/JS读取属性时用[]和用.的区别.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/JS%E8%AF%BB%E5%8F%96%E5%B1%9E%E6%80%A7%E6%97%B6%E7%94%A8%5B%5D%E5%92%8C%E7%94%A8.%E7%9A%84%E5%8C%BA%E5%88%AB.md"]],
  ["v-3096fcfc","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/JS%E8%BF%AD%E4%BB%A3.html",{"d":"2023-08-19T00:00:00.000Z","l":"2023年8月19日","c":["js"],"g":["js基础","面试题"],"u":false,"e":"<h1> JS的迭代</h1>\n<p>本文以一道面试题开场：<code>for-in</code>和<code>for-of</code>的区别？并说出下面代码输出什么，为什么？</p>\n<div class=\"language-javascript line-numbers-mode\" data-ext=\"js\"><pre class=\"language-javascript\"><code><span class=\"token keyword\">let</span> babies <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'hpy'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'zs'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'yxz'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hfcj'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'zpj'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cfy'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'yxx'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lyc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'zls'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'yxn'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cym'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nbabies<span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span>iterator<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        index<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> baby <span class=\"token keyword\">of</span> babies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>baby<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ?</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"JS的迭代","i":"edit"},["/文章/分类/js/疑难杂症/JS迭代.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/JS%E8%BF%AD%E4%BB%A3","/文章/分类/js/疑难杂症/JS迭代.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/JS%E8%BF%AD%E4%BB%A3.md"]],
  ["v-3e533858","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D.html",{"d":"2022-05-20T00:00:00.000Z","l":"2022年5月20日","c":["js"],"g":["js基础"],"u":false,"e":"<p>这里所说的深浅拷贝前提是引用数据类型</p>\n<p>深浅拷贝的主要区别就是：<strong>是否真正获取一个对象的复制实体，而不是引用</strong></p>\n","y":"a","t":"深、浅拷贝之间的关系","i":"edit"},["/文章/分类/js/疑难杂症/深浅拷贝.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D","/文章/分类/js/疑难杂症/深浅拷贝.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D.md"]],
  ["v-93e441b4","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/%E7%BB%84%E4%BB%B6%E9%97%B4%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92/Pinia%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86.html",{"d":"2023-07-27T00:00:00.000Z","l":"2023年7月27日","c":["vue"],"g":["笔记","面试题"],"u":false,"e":"<h1> Pinia— Vue 3的官方状态管理库</h1>\n<h2> 状态管理</h2>\n<h3> 什么是状态管理</h3>\n<p><strong>状态管理</strong>指的是在应用程序中，对应用程序数据（即状态）进行有效组织、维护和更新的一系列技术和方法。它通常包括确定和记录应用程序所需的所有状态数据，以及管理这些数据的变化和使用。状态管理可以帮助开发人员设计和实现可维护性高、可扩展性好的应用程序，并提高应用程序的性能和用户体验。</p>\n<p>Vue的状态管理称为Vue状态管理模式，是一种在Vue的核心框架中提供了一种将<strong>状态与视图分离</strong>的思想，以更好地管理应用程序的状态和数据。理论上来说，每一个 Vue 组件实例都已经在“管理”它自己的响应式状态了。我们以一个简单的计数器组件为例：</p>","y":"a","t":"Pinia— Vue 3的官方状态管理库","i":"edit"},["/文章/分类/Vue/组件间消息的传递/Pinia状态管理.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/%E7%BB%84%E4%BB%B6%E9%97%B4%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92/Pinia%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86","/文章/分类/Vue/组件间消息的传递/Pinia状态管理.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/%E7%BB%84%E4%BB%B6%E9%97%B4%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92/Pinia%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86.md"]],
  ["v-d99cfb18","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/%E7%BB%84%E4%BB%B6%E9%97%B4%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92/props%E4%BC%A0%E5%8F%82.html",{"d":"2023-07-26T00:00:00.000Z","l":"2023年7月26日","c":["vue"],"g":["笔记","面试题"],"u":false,"e":"<h1> Props传参</h1>\n<p>组件化编程作是Vue框架优势之一，而组件实例对象是相互独立的，这就意味着不同组件之间的数据无法直接引用。因此组件间通信成为学习使用Vue框架开发项目必不可少的技术点。Props 就是组件间传递消息的一种方式。</p>\n<p>注意：props传递的数据在接收的一方是不能修改的。</p>\n","y":"a","t":"Props传参","i":"edit"},["/文章/分类/Vue/组件间消息的传递/props传参.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/%E7%BB%84%E4%BB%B6%E9%97%B4%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92/props%E4%BC%A0%E5%8F%82","/文章/分类/Vue/组件间消息的传递/props传参.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/%E7%BB%84%E4%BB%B6%E9%97%B4%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92/props%E4%BC%A0%E5%8F%82.md"]],
  ["v-0d0b4d5c","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/%E7%BB%84%E4%BB%B6%E9%97%B4%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92/provide-inject.html",{"d":"2023-07-27T00:00:00.000Z","l":"2023年7月27日","c":["vue"],"g":["笔记","面试题"],"u":false,"e":"<h1> 依赖注入（Provide—Inject）</h1>\n<p><code>provide</code> 和 <code>inject</code> 通常成对一起使用，使一个祖先组件作为其后代组件的依赖注入方，无论这个组件的层级有多深都可以注入成功，只要他们处于同一条组件链上。</p>\n","y":"a","t":"依赖注入（Provide—Inject）","i":"edit"},["/文章/分类/Vue/组件间消息的传递/provide-inject.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/%E7%BB%84%E4%BB%B6%E9%97%B4%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92/provide-inject","/文章/分类/Vue/组件间消息的传递/provide-inject.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/%E7%BB%84%E4%BB%B6%E9%97%B4%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92/provide-inject.md"]],
  ["v-0f383d9e","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/%E7%BB%84%E4%BB%B6%E9%97%B4%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92/v-model.html",{"d":"2023-07-27T00:00:00.000Z","l":"2023年7月27日","c":["vue"],"g":["笔记","面试题"],"u":false,"e":"<h1> 组件v-mdodel传数据</h1>\n<h2> v-model在原生元素上的用法</h2>\n<p><code>v-model</code> 可以在组件上使用以实现双向数据绑定。</p>\n<p>首先让我们回忆一下 <code>v-model</code> 在原生元素上的用法：</p>\n<div class=\"language-vue line-numbers-mode\" data-ext=\"vue\"><pre class=\"language-vue\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>searchText<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>它会被vue框架展开为下面的形式：</p>\n<div class=\"language-vue line-numbers-mode\" data-ext=\"vue\"><pre class=\"language-vue\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n  <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>searchText<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">@input</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>searchText = $event.target.value<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/&gt;</span></span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"组件v-mdodel传数据","i":"edit"},["/文章/分类/Vue/组件间消息的传递/v-model.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/%E7%BB%84%E4%BB%B6%E9%97%B4%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92/v-model","/文章/分类/Vue/组件间消息的传递/v-model.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/%E7%BB%84%E4%BB%B6%E9%97%B4%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92/v-model.md"]],
  ["v-329d215c","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/%E7%BB%84%E4%BB%B6%E9%97%B4%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6.html",{"d":"2023-07-26T00:00:00.000Z","l":"2023年7月26日","c":["vue"],"g":["笔记","面试题"],"u":false,"e":"<h1> 自定义事件</h1>\n<p>组件的自定义事件实现子组件向父组件传递数据的功能，所以，自定义事件的<strong>绑定</strong>需要在父组件中完成。</p>\n<p>组件的自定义事件的<strong>触发</strong>需要在子组件中完成，给谁绑定的事件，就找谁触发。</p>\n<p>在了解组件的自定义事件之前，我们也了解过<code>props</code>，<code>props</code>也能实现子组件向父组件通信，接下来展示的将是通过自定义事件完成子传父功能。</p>\n","y":"a","t":"自定义事件","i":"edit"},["/文章/分类/Vue/组件间消息的传递/自定义事件.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/%E7%BB%84%E4%BB%B6%E9%97%B4%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6","/文章/分类/Vue/组件间消息的传递/自定义事件.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/%E7%BB%84%E4%BB%B6%E9%97%B4%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6.md"]],
  ["v-c2257a64","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Internet/%E7%89%A9%E7%90%86%E5%B1%82/%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80.html",{"d":"2023-04-03T00:00:00.000Z","l":"2023年4月3日","c":["学习笔记","计算机网络"],"g":["笔记","计算机网络"],"u":false,"e":"<h1> 通信基础</h1>\n<h2> 基本概念</h2>\n","y":"a","t":"通信基础","i":"edit"},["/文章/分类/Internet/物理层/通信基础.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Internet/%E7%89%A9%E7%90%86%E5%B1%82/%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80","/文章/分类/Internet/物理层/通信基础.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Internet/%E7%89%A9%E7%90%86%E5%B1%82/%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80.md"]],
  ["v-8be487f6","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Internet/%E8%AE%A1%E7%BD%91%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84_%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B.html",{"d":"2023-04-02T00:00:00.000Z","l":"2023年4月2日","c":["学习笔记","计算机网络"],"g":["笔记","计算机网络"],"u":false,"e":"<h1> 计算机网络体系结构</h1>\n<h3> 分层</h3>\n<ol>\n<li><strong>实体</strong>：第n层的活动元素称为n层实体。同一层的实体叫对等实体。</li>\n<li><strong>协议</strong>：为进行网络中的对等实体数据交换而建立的规则、标准或约定称为网络协议。【水平方向看】\n<ol>\n<li>语法：规定传输数据的格式</li>\n<li>语义：规定要完成的功能</li>\n<li>同步：规定各种操作的顺序</li>\n</ol>\n</li>\n<li><strong>接口</strong>（访问服务点SAP）：上层使用下层服务的入口。</li>\n<li><strong>服务</strong>：下层为相邻的上层提供的功能调用。【垂直】</li>\n</ol>\n","y":"a","t":"计算机网络体系结构","i":"edit"},["/文章/分类/Internet/计网体系结构/体系结构_参考模型.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Internet/%E8%AE%A1%E7%BD%91%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84_%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B","/文章/分类/Internet/计网体系结构/体系结构&参考模型.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Internet/%E8%AE%A1%E7%BD%91%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84&%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B.html","/文章/分类/Internet/计网体系结构/体系结构&参考模型.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Internet/%E8%AE%A1%E7%BD%91%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84&%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B.md"]],
  ["v-70586f3d","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Internet/%E8%AE%A1%E7%BD%91%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9A%84%E6%A6%82%E5%BF%B5.html",{"d":"2023-04-02T00:00:00.000Z","l":"2023年4月2日","c":["学习笔记","计算机网络"],"g":["笔记","计算机网络"],"u":false,"e":"<h1> 计算机网络的概述</h1>\n<h2> 计算机网络概念</h2>\n<p><mark><strong>计算机网络是互连的、自治的计算机集合。</strong></mark></p>\n<p>是一个将分散的、具有独立功能的计算机系统，通过通信设备与线路连接起来，有功能完善的软件实现支援共享和信息传递的系统。</p>\n","y":"a","t":"计算机网络的概述","i":"edit"},["/文章/分类/Internet/计网体系结构/计算机网络的概念.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Internet/%E8%AE%A1%E7%BD%91%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9A%84%E6%A6%82%E5%BF%B5","/文章/分类/Internet/计网体系结构/计算机网络的概念.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Internet/%E8%AE%A1%E7%BD%91%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9A%84%E6%A6%82%E5%BF%B5.md"]],
  ["v-572b6760","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/Vite/Vite%E7%9B%B8%E6%AF%94Webpack%E7%9A%84%E4%BC%98%E5%8A%BF.html",{"d":"2023-08-12T00:00:00.000Z","l":"2023年8月12日","c":["vue","vite","前端工程化"],"g":["笔记","前端工程化构建工具"],"u":true,"e":"<h1> Vite相比Webpack的优势</h1>\n<p>引用<a href=\"https://cn.vitejs.dev/guide/why.html#the-problems\" target=\"_blank\" rel=\"noopener noreferrer\">Vite官方文档</a>中的一段话:</p>\n<blockquote>\n<p>当我们开始构建越来越大型的应用时，需要处理的 JavaScript 代码量也呈指数级增长。包含数千个模块的大型项目相当普遍。我们开始遇到性能瓶颈 —— 使用 JavaScript 开发的工具通常需要很长时间（甚至是几分钟！）才能启动开发服务器，即使使用 HMR(热更新)，文件修改后的效果也需要几秒钟才能在浏览器中反映出来。如此循环往复，迟钝的反馈会极大地影响开发者的开发效率和幸福感。</p>\n</blockquote>\n<p>起因: 我们的项目越大 ----&gt; 构建工具（webpack）所要处理的js代码就越多 【跟webpack的一个构建过程（工作流程）有关系】</p>\n<p>造成的结果: 构建工具需要很长时间才能启动开发服务器 (启动开发服务器 ---&gt; 把项目跑起来)</p>\n","y":"a","t":"Vite相比Webpack的优势","i":"edit"},["/文章/分类/前端工程化/Vite/Vite相比Webpack的优势.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/Vite/Vite%E7%9B%B8%E6%AF%94Webpack%E7%9A%84%E4%BC%98%E5%8A%BF","/文章/分类/前端工程化/Vite/Vite相比Webpack的优势.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/Vite/Vite%E7%9B%B8%E6%AF%94Webpack%E7%9A%84%E4%BC%98%E5%8A%BF.md"]],
  ["v-5f3270f0","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/Vite/%E4%BB%80%E4%B9%88%E6%98%AF%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7.html",{"d":"2023-08-12T00:00:00.000Z","l":"2023年8月12日","c":["vue","vite","前端工程化"],"g":["笔记","前端工程化构建工具"],"u":true,"e":"<h1> 什么是构建工具</h1>\n<p>了解构建工具之前，我们首先要知道浏览器只认识<code>html</code>、<code>css</code>、<code>js</code>，而我们开发时用的<code>vue</code>，<code>react</code>框架都只是为了方便我们开发而使用的工具。</p>\n<h2> 使用构建工具的原因</h2>\n<p>这些<code>vue</code>或者<code>react</code>的企业级别项目里都会具备这些功能：</p>\n<blockquote>\n<ol>\n<li>使用typescript语言: 如果遇到ts文件我们需要使用<code>tsc</code>命令将typescript代码转换为js代码</li>\n<li>使用React/Vue: 安装<code>react-compiler</code> / <code>vue-complier</code>, 将我们写的jsx文件或者.vue文件转换为<code>render</code>函数将他们转换为html、js、css。</li>\n<li>使用less/sass/postcss/component-style: 我们又需要安装less-loader, sass-loader等一系列编译工具将它们转换为css</li>\n<li>语法降级: babel ---&gt; 将es的新语法转换旧版浏览器可以接受的语法（考虑兼容性）</li>\n<li>体积优化: uglifyjs ---&gt; 将我们的代码进行压缩变成<mark>体积更小性能更高</mark>的文件</li>\n<li>......</li>\n</ol>\n</blockquote>","y":"a","t":"什么是构建工具","i":"edit"},["/文章/分类/前端工程化/Vite/什么是构建工具.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/Vite/%E4%BB%80%E4%B9%88%E6%98%AF%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7","/文章/分类/前端工程化/Vite/什么是构建工具.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/Vite/%E4%BB%80%E4%B9%88%E6%98%AF%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7.md"]],
  ["v-e3db0936","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86.html",{"d":"2023-08-18T00:00:00.000Z","l":"2023年8月18日","c":["算法"],"g":["leetcode"],"u":true,"e":"<h1> 二叉树的遍历</h1>\n<p>关于二叉树的遍历方式，要知道二叉树遍历的基本方式都有哪些。二叉树主要有两种遍历方式：</p>\n<blockquote>\n<ol>\n<li>深度优先遍历：先往深走，遇到叶子节点再往回走。\n<ol>\n<li>前序遍历（递归法，迭代法）</li>\n<li>中序遍历（递归法，迭代法）</li>\n<li>后序遍历（递归法，迭代法）</li>\n</ol>\n</li>\n<li>广度优先遍历：一层一层的去遍历。\n<ol>\n<li>层次遍历（迭代法）</li>\n</ol>\n</li>\n</ol>\n</blockquote>\n","y":"a","t":"二叉树的遍历","i":"edit"},["/文章/分类/算法/二叉树/二叉树的遍历.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86","/文章/分类/算法/二叉树/二叉树的遍历.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86.md"]],
  ["v-31059ea4","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP%E7%AE%97%E6%B3%95.html",{"d":"2023-08-10T00:00:00.000Z","l":"2023年8月10日","c":["算法"],"g":["leetcode"],"u":true,"e":"<h1> KMP算法</h1>\n<h2> 什么时KMP算法</h2>\n<p><strong>KMP算法是一种改进的字符串匹配算法</strong></p>\n<p>由D.E.Knuth，J.H.Morris和      V.R.Pratt提出的，因此人们称它为克努特—莫里斯—普拉特操作（简称KMP算法）。</p>\n<p>KMP的主要思想是<strong>当出现字符串不匹配时，可以知道一部分之前已经匹配的文本内容，可以利用这些信息避免从头再去做匹配了。</strong></p>\n<p>所以如何记录已经匹配的文本内容，是KMP的重点，也就是next数组。</p>\n","y":"a","t":"KMP算法","i":"edit"},["/文章/分类/算法/字符串/KMP算法.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP%E7%AE%97%E6%B3%95","/文章/分类/算法/字符串/KMP算法.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/KMP%E7%AE%97%E6%B3%95.md"]],
  ["v-5635886f","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D.html",{"d":"2023-08-07T00:00:00.000Z","l":"2023年8月7日","c":["算法"],"g":["leetcode"],"u":true,"e":"<h1> 反转字符串中的单词</h1>\n<h2> 题目</h2>\n<p>给你一个字符串 <code>s</code> ，请你反转字符串中 <strong>单词</strong> 的顺序。</p>\n<p><strong>单词</strong> 是由非空格字符组成的字符串。<code>s</code> 中使用至少一个空格将字符串中的 <strong>单词</strong> 分隔开。</p>\n<p>返回 <strong>单词</strong> 顺序颠倒且 <strong>单词</strong> 之间用单个空格连接的结果字符串。</p>\n<p>**注意：**输入字符串 <code>s</code>中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。</p>\n","y":"a","t":"反转字符串中的单词","i":"edit"},["/文章/分类/算法/字符串/反转字符串中的单词.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D","/文章/分类/算法/字符串/反转字符串中的单词.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D.md"]],
  ["v-240be836","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%89%93%E5%8D%B0%E4%BB%8E1%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84n%E4%BD%8D%E6%95%B0.html",{"d":"2023-08-20T00:00:00.000Z","l":"2023年8月20日","c":["算法"],"g":["leetcode"],"u":true,"e":"<h1> 打印从1到最大的n位数</h1>\n<h2> 题目</h2>\n<p>输入数字 <code>n</code>，按顺序打印出从 1 到最大的 n 位十进制数。比如输入 3，则打印出 1、2、3 一直到最大的 3 位数 999。</p>\n<p><strong>示例 1:</strong></p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>输入: n = 1\n输出: [1,2,3,4,5,6,7,8,9]\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><blockquote>\n<p><strong>分析：</strong></p>\n<p>若不考虑大数问题，则十分简单一个从1到最大数的循环即可。 若考虑大数问题，则首先需要将数字转成字符串避免溢出，然后全排列字符串的第0位到第n-1位。 存储结果时需去掉字符串前几位的0(例如：0099的0没有意义，应为99)再放入结果。</p>\n</blockquote>\n","y":"a","t":"打印从1到最大的n位数","i":"edit"},["/文章/分类/算法/字符串/打印从1到最大的n位数.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%89%93%E5%8D%B0%E4%BB%8E1%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84n%E4%BD%8D%E6%95%B0","/文章/分类/算法/字符串/打印从1到最大的n位数.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%89%93%E5%8D%B0%E4%BB%8E1%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84n%E4%BD%8D%E6%95%B0.md"]],
  ["v-99464360","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2.html",{"d":"2023-07-21T00:00:00.000Z","l":"2023年7月21日","c":["算法"],"g":["leetcode"],"u":true,"e":"<h1> 最小覆盖子串</h1>\n<p>给你一个字符串 s 、一个字符串 t 。返回 s 中涵盖 t 所有字符的最小子串。如果 s 中不存在涵盖 t 所有字符的子串，则返回空字符串 \"\" 。</p>\n<p>注意：</p>\n<ul>\n<li>\n<p>对于 t 中重复字符，我们寻找的子字符串中该字符数量必须不少于 t 中该字符数量。</p>\n</li>\n<li>\n<p>如果 s 中存在这样的子串，我们保证它是唯一的答案。</p>\n</li>\n</ul>\n","y":"a","t":"最小覆盖子串","i":"edit"},["/文章/分类/算法/字符串/最小覆盖子串.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2","/文章/分类/算法/字符串/最小覆盖子串.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2.md"]],
  ["v-39433700","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE.html",{"d":"2023-07-17T00:00:00.000Z","l":"2023年7月17日","c":["算法"],"g":["leetcode"],"u":true,"e":"<h1> 力扣 在排序数组中查找元素的第一个和最后一个位置</h1>\n<h2> 题目</h2>\n<p>给你一个按照非递减顺序排列的整数数组 <code>nums</code>，和一个目标值 <code>target</code>。请你找出给定目标值在数组中的开始位置和结束位置。</p>\n<p>如果数组中不存在目标值 <code>target</code>，返回 <code>[-1, -1]</code>。</p>\n<p>你必须设计并实现时间复杂度为 <code>O(log n)</code> 的算法解决此问题。</p>\n","y":"a","t":"力扣 在排序数组中查找元素的第一个和最后一个位置","i":"edit"},["/文章/分类/算法/数组/在排序数组中查找元素的第一个和最后一个位置.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE","/文章/分类/算法/数组/在排序数组中查找元素的第一个和最后一个位置.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE.md"]],
  ["v-539df810","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE.html",{"d":"2023-07-17T00:00:00.000Z","l":"2023年7月17日","c":["算法"],"g":["leetcode"],"u":true,"e":"<h1> 力扣 搜索插入位置</h1>\n<h2> 题目</h2>\n<p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p>\n<p>请必须使用时间复杂度为 O(log n) 的算法。</p>\n","y":"a","t":"力扣 搜索插入位置","i":"edit"},["/文章/分类/算法/数组/搜索插入位置.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE","/文章/分类/算法/数组/搜索插入位置.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE.md"]],
  ["v-614081a0","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AF%B9%E5%92%8C.html",{"d":"2023-08-13T00:00:00.000Z","l":"2023年8月13日","c":["算法"],"g":["leetcode"],"u":true,"e":"<h1> 数组中的最大数对和</h1>\n<h2> 题目</h2>\n<p>给你一个下标从 <strong>0</strong> 开始的整数数组 <code>nums</code> 。请你从 <code>nums</code> 中找出和 <strong>最大</strong> 的一对数，且这两个数数位上最大的数字相等。</p>\n<p>返回最大和，如果不存在满足题意的数字对，返回 <code>-1</code> <em>。</em></p>\n<!--more-->\n<p><strong>示例 1：</strong></p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>输入：nums = [51,71,17,24,42]\n输出：88\n解释：\ni = 1 和 j = 2 ，nums[i] 和 nums[j] 数位上最大的数字相等，且这一对的总和 71 + 17 = 88 。 \ni = 3 和 j = 4 ，nums[i] 和 nums[j] 数位上最大的数字相等，且这一对的总和 24 + 42 = 66 。\n可以证明不存在其他数对满足数位上最大的数字相等，所以答案是 88 。\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"数组中的最大数对和","i":"edit"},["/文章/分类/算法/数组/数组中的最大数对和.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AF%B9%E5%92%8C","/文章/分类/算法/数组/数组中的最大数对和.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AF%B9%E5%92%8C.md"]],
  ["v-5551dc70","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84.html",{"d":"2023-07-27T00:00:00.000Z","l":"2023年7月27日","c":["算法"],"g":["leetcode"],"u":true,"e":"<h1> 矩阵中的路径</h1>\n<h2> 题目</h2>\n<p>给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。</p>\n<p>单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。</p>\n<p>例如，在下面的 3×4 的矩阵中包含单词 \"ABCCED\"（单词中的字母已标出）。</p>\n<figure><img src=\"https://assets.leetcode.com/uploads/2020/11/04/word2.jpg\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>","y":"a","t":"矩阵中的路径","i":"edit"},["/文章/分类/算法/数组/矩阵中的路径.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84","/文章/分类/算法/数组/矩阵中的路径.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84.md"]],
  ["v-3ca07564","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5%20II.html",{"d":"2023-07-24T00:00:00.000Z","l":"2023年7月24日","c":["算法"],"g":["leetcode"],"u":true,"e":"<h1> 螺旋矩阵</h1>\n<h3> 题目</h3>\n<p>给你一个正整数 <code>n</code> ，生成一个包含 <code>1</code> 到 <code>n2</code> 所有元素，且元素按顺时针顺序螺旋排列的 <code>n x n</code> 正方形矩阵 <code>matrix</code> 。</p>\n<!--more-->\n<p><strong>示例 1：</strong></p>\n<figure><img src=\"https://assets.leetcode.com/uploads/2020/11/13/spiraln.jpg\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>","y":"a","t":"螺旋矩阵","i":"edit"},["/文章/分类/算法/数组/螺旋矩阵 II.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5%20II","/文章/分类/算法/数组/螺旋矩阵 II.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5%20II.md"]],
  ["v-57b9ebae","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/%E5%8D%95%E9%98%9F%E5%88%97%E5%AE%9E%E7%8E%B0%E6%A0%88.html",{"d":"2023-08-06T00:00:00.000Z","l":"2023年8月6日","c":["算法"],"g":["leetcode"],"u":false,"e":"<h1> 用队列实现栈</h1>\n<h2> 题目</h2>\n<p>请你仅使用两个队列实现一个后入先出（LIFO）的栈，并支持普通栈的全部四种操作（<code>push</code>、<code>top</code>、<code>pop</code> 和 <code>empty</code>）。</p>\n<p>实现 <code>MyStack</code> 类：</p>\n<ul>\n<li><code>void push(int x)</code> 将元素 x 压入栈顶。</li>\n<li><code>int pop()</code> 移除并返回栈顶元素。</li>\n<li><code>int top()</code> 返回栈顶元素。</li>\n<li><code>boolean empty()</code> 如果栈是空的，返回 <code>true</code> ；否则，返回 <code>false</code> 。</li>\n</ul>","y":"a","t":"用队列实现栈","i":"edit"},["/文章/分类/算法/栈和队列/单队列实现栈.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/%E5%8D%95%E9%98%9F%E5%88%97%E5%AE%9E%E7%8E%B0%E6%A0%88","/文章/分类/算法/栈和队列/单队列实现栈.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/%E5%8D%95%E9%98%9F%E5%88%97%E5%AE%9E%E7%8E%B0%E6%A0%88.md"]],
  ["v-736031a8","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/%E5%8F%8C%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97.html",{"d":"2023-08-06T00:00:00.000Z","l":"2023年8月6日","c":["算法"],"g":["leetcode"],"u":false,"e":"<h1> 用栈实现队列</h1>\n<h2> 题目</h2>\n<p>请你仅使用两个栈实现先入先出队列。队列应当支持一般队列支持的所有操作（<code>push</code>、<code>pop</code>、<code>peek</code>、<code>empty</code>）：</p>\n<p>实现 <code>MyQueue</code> 类：</p>\n<ul>\n<li><code>void push(int x)</code> 将元素 x 推到队列的末尾</li>\n<li><code>int pop()</code> 从队列的开头移除并返回元素</li>\n<li><code>int peek()</code> 返回队列开头的元素</li>\n<li><code>boolean empty()</code> 如果队列为空，返回 <code>true</code> ；否则，返回 <code>false</code></li>\n</ul>","y":"a","t":"用栈实现队列","i":"edit"},["/文章/分类/算法/栈和队列/双栈实现队列.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/%E5%8F%8C%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97","/文章/分类/算法/栈和队列/双栈实现队列.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/%E5%8F%8C%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97.md"]],
  ["v-42cea91c","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/%E5%8F%8C%E6%8C%87%E9%92%88%E6%B3%95.html",{"d":"2023-07-19T00:00:00.000Z","l":"2023年7月19日","c":["算法"],"g":["leetcode"],"u":true,"e":"<h1> 双指针法</h1>\n<p>双指针法（快慢指针法）： <strong>通过一个快指针和慢指针在一个for循环下完成两个for循环的工作。</strong></p>\n<p>定义快慢指针</p>\n<ul>\n<li>快指针：寻找新数组的元素 ，新数组就是不含有目标元素的数组</li>\n<li>慢指针：指向更新 新数组下标的位置</li>\n</ul>\n","y":"a","t":"双指针法","i":"edit"},["/文章/分类/算法/链表/双指针法.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/%E5%8F%8C%E6%8C%87%E9%92%88%E6%B3%95","/文章/分类/算法/链表/双指针法.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/%E5%8F%8C%E6%8C%87%E9%92%88%E6%B3%95.md"]],
  ["v-c6ea601a","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8.html",{"d":"2023-07-26T00:00:00.000Z","l":"2023年7月26日","c":["算法"],"g":["leetcode"],"u":false,"e":"<h1> 反转链表</h1>\n<h2> 题目</h2>\n<p>给你单链表的头节点 <code>head</code> ，请你反转链表，并返回反转后的链表。</p>\n<!--more-->\n<p><strong>示例 1：</strong></p>\n<figure><img src=\"https://assets.leetcode.com/uploads/2021/02/19/rev1ex1.jpg\" alt=\"img\" tabindex=\"0\" loading=\"lazy\"><figcaption>img</figcaption></figure>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>输入：head = [1,2,3,4,5]\n输出：[5,4,3,2,1]\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"反转链表","i":"edit"},["/文章/分类/算法/链表/反转链表.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8","/文章/分类/算法/链表/反转链表.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8.md"]],
  ["v-216e82f4","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/%E7%8E%AF%E5%9E%8B%E9%93%BE%E8%A1%A8II.html",{"d":"2023-07-30T00:00:00.000Z","l":"2023年7月30日","c":["算法"],"g":["leetcode"],"u":true,"e":"<h1> 环形链表 II</h1>\n<h2> 题目</h2>\n<p>给定一个链表的头节点  head ，返回链表开始入环的第一个节点。 如果链表无环，则返回 null。</p>\n<p>如果链表中有某个节点，可以通过连续跟踪 next 指针再次到达，则链表中存在环。 为了表示给定链表中的环，评测系统内部使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。如果 pos 是 -1，则在该链表中没有环。注意：pos 不作为参数进行传递，仅仅是为了标识链表的实际情况。</p>\n<p><strong>不允许修改</strong> 链表。</p>\n<p>示例 1：</p>\n<figure><img src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist.png\" alt=\"\" tabindex=\"0\" loading=\"lazy\"><figcaption></figcaption></figure>","y":"a","t":"环形链表 II","i":"edit"},["/文章/分类/算法/链表/环型链表II.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/%E7%8E%AF%E5%9E%8B%E9%93%BE%E8%A1%A8II","/文章/分类/算法/链表/环型链表II.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/%E7%8E%AF%E5%9E%8B%E9%93%BE%E8%A1%A8II.md"]],
  ["v-39ea2b48","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8.html",{"d":"2023-07-31T00:00:00.000Z","l":"2023年7月31日","c":["算法"],"g":["leetcode"],"u":true,"e":"<h1> 重排链表</h1>\n<h2> 题目</h2>\n<p>给定一个单链表 L 的头节点 head ，单链表 L 表示为：</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>L0 → L1 → … → Ln - 1 → Ln\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div><p>请将其重新排列后变为：</p>","y":"a","t":"重排链表","i":"edit"},["/文章/分类/算法/链表/重排链表.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8","/文章/分类/算法/链表/重排链表.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8.md"]],
  ["v-47aa476d","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/git%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/Git%E5%90%8C%E6%97%B6%E9%85%8D%E7%BD%AEgithub%E5%92%8Cgitee.html",{"d":"2023-08-10T00:00:00.000Z","l":"2023年8月10日","c":["git使用技巧","学习笔记"],"g":["笔记"],"u":true,"e":"<h1> Git同时配置github和gitee</h1>\n<h2> 配置Git用户名和邮箱</h2>\n<p>如果已经设置过可以跳过</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.name 用户名\n<span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.email 邮箱\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"Git同时配置github和gitee","i":"edit"},["/文章/分类/项目总结/git使用技巧/Git同时配置github和gitee.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/git%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/Git%E5%90%8C%E6%97%B6%E9%85%8D%E7%BD%AEgithub%E5%92%8Cgitee","/文章/分类/项目总结/git使用技巧/Git同时配置github和gitee.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/git%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/Git%E5%90%8C%E6%97%B6%E9%85%8D%E7%BD%AEgithub%E5%92%8Cgitee.md"]],
  ["v-303e9700","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/git%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/%E5%85%B3%E4%BA%8ESSL%E8%AF%81%E4%B9%A6%E9%97%AE%E9%A2%98.html",{"d":"2023-08-10T00:00:00.000Z","l":"2023年8月10日","c":["git使用技巧","学习笔记"],"g":["笔记"],"u":true,"e":"<h1> SSL certificate problem: unable to get local issuer certificate 的一种解决方案</h1>\n<p>今天遇到这样一个问题，因为平时项目托管到gitee上，所以当今天突然要使用github时，问题就来了，当我们创建完新仓库后，本地项目将要上传到远端仓库。</p>\n<div class=\"language-bash line-numbers-mode\" data-ext=\"sh\"><pre class=\"language-bash\"><code><span class=\"token function\">git</span> init\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"first commit\"</span>\n<span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-M</span> main\n<span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin 仓库url地址\n<span class=\"token function\">git</span> push origin main\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"SSL certificate problem: unable to get local issuer certificate 的一种解决方案","i":"edit"},["/文章/分类/项目总结/git使用技巧/关于SSL证书问题.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/git%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/%E5%85%B3%E4%BA%8ESSL%E8%AF%81%E4%B9%A6%E9%97%AE%E9%A2%98","/文章/分类/项目总结/git使用技巧/关于SSL证书问题.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/git%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/%E5%85%B3%E4%BA%8ESSL%E8%AF%81%E4%B9%A6%E9%97%AE%E9%A2%98.md"]],
  ["v-6794bb83","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99.html",{"d":"2023-03-28T00:00:00.000Z","l":"2023年3月28日","c":["项目总结","学习笔记"],"g":["笔记"],"u":true,"e":"<h1> 个人博客网站的搭建</h1>\n<div class=\"language-markdown line-numbers-mode\" data-ext=\"md\"><pre class=\"language-markdown\"><code>::: info 博客开发流程\n1.初始化vuepress项目\n2.选择喜欢的博客主题\n3.下载模板主题\n4.配置修改成自己想要的风格\n5.迁移博客\n:::\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","t":"个人博客网站的搭建","i":"edit"},["/文章/分类/项目总结/个人博客网站/个人博客网站.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99","/文章/分类/项目总结/个人博客网站/个人博客网站.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99.md"]],
  ["v-d1658ea4","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/%E9%83%A8%E7%BD%B2%E4%B8%8A%E7%BA%BF.html",{"d":"2023-04-15T00:00:00.000Z","l":"2023年4月15日","c":["项目总结","学习笔记"],"g":["笔记","部署"],"u":false,"e":"<h1> 项目部署上线</h1>\n","y":"a","t":"项目部署上线","i":"edit"},["/文章/分类/项目总结/个人博客网站/部署上线.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/%E9%83%A8%E7%BD%B2%E4%B8%8A%E7%BA%BF","/文章/分类/项目总结/个人博客网站/部署上线.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/%E9%83%A8%E7%BD%B2%E4%B8%8A%E7%BA%BF.md"]],
  ["v-7ade7abc","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E8%BF%90%E8%90%A5%E5%B9%B3%E5%8F%B0/API%E6%8E%A5%E5%8F%A3%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86.html",{"d":"2023-07-31T00:00:00.000Z","l":"2023年7月31日","c":["项目总结","学习笔记"],"g":["笔记"],"u":true,"e":"<h1> API接口统一管理</h1>\n<p>在开发项目的时候,接口可能很多需要统一管理。在src目录下去创建api文件夹去统一管理项目的接口；这样便于后期维护和团队开发。</p>\n","y":"a","t":"API接口统一管理","i":"edit"},["/文章/分类/项目总结/运营平台/API接口统一管理.html","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E8%BF%90%E8%90%A5%E5%B9%B3%E5%8F%B0/API%E6%8E%A5%E5%8F%A3%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86","/文章/分类/项目总结/运营平台/API接口统一管理.md","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E8%BF%90%E8%90%A5%E5%B9%B3%E5%8F%B0/API%E6%8E%A5%E5%8F%A3%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86.md"]],
  ["v-3706649a","/404.html",{"y":"p","t":""},["/404"]],
  ["v-2f2f5b2e","/%E6%96%87%E7%AB%A0/",{"y":"p","t":"文章"},["/文章/","/%E6%96%87%E7%AB%A0/index.html"]],
  ["v-62fd6704","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/AJAX/",{"y":"p","t":"A J A X"},["/文章/分类/AJAX/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/AJAX/index.html"]],
  ["v-587d4431","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/",{"y":"p","t":"分类"},["/文章/分类/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/index.html"]],
  ["v-2007563e","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/ECMAScript/",{"y":"p","t":"E C M A Script"},["/文章/分类/ECMAScript/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/ECMAScript/index.html"]],
  ["v-d9d2c18c","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/",{"y":"p","t":"Vue"},["/文章/分类/Vue/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/index.html"]],
  ["v-f452864e","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E8%80%83%E6%A0%B8%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/",{"y":"p","t":"考核面试总结"},["/文章/分类/考核面试总结/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E8%80%83%E6%A0%B8%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/index.html"]],
  ["v-7510e7c9","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/Promise/",{"y":"p","t":"Promise"},["/文章/分类/js/Promise/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/Promise/index.html"]],
  ["v-cd37c396","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/",{"y":"p","t":"Js"},["/文章/分类/js/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/index.html"]],
  ["v-556d65dc","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/this_problem/",{"y":"p","t":"This Problem"},["/文章/分类/js/this_problem/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/this_problem/index.html"]],
  ["v-00ed93b6","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/",{"y":"p","t":"疑难杂症"},["/文章/分类/js/疑难杂症/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/index.html"]],
  ["v-20b2d32a","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/%E7%BB%84%E4%BB%B6%E9%97%B4%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92/",{"y":"p","t":"组件间消息的传递"},["/文章/分类/Vue/组件间消息的传递/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Vue/%E7%BB%84%E4%BB%B6%E9%97%B4%E6%B6%88%E6%81%AF%E7%9A%84%E4%BC%A0%E9%80%92/index.html"]],
  ["v-8defb948","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Internet/%E7%89%A9%E7%90%86%E5%B1%82/",{"y":"p","t":"物理层"},["/文章/分类/Internet/物理层/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Internet/%E7%89%A9%E7%90%86%E5%B1%82/index.html"]],
  ["v-84adb846","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Internet/",{"y":"p","t":"Internet"},["/文章/分类/Internet/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Internet/index.html"]],
  ["v-65f2e2da","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Internet/%E8%AE%A1%E7%BD%91%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/",{"y":"p","t":"计网体系结构"},["/文章/分类/Internet/计网体系结构/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/Internet/%E8%AE%A1%E7%BD%91%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/index.html"]],
  ["v-6b3ddf61","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/Vite/",{"y":"p","t":"Vite"},["/文章/分类/前端工程化/Vite/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/Vite/index.html"]],
  ["v-631e570a","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/",{"y":"p","t":"前端工程化"},["/文章/分类/前端工程化/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/index.html"]],
  ["v-0fbccf46","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E4%BA%8C%E5%8F%89%E6%A0%91/",{"y":"p","t":"二叉树"},["/文章/分类/算法/二叉树/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E4%BA%8C%E5%8F%89%E6%A0%91/index.html"]],
  ["v-704719ae","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/",{"y":"p","t":"算法"},["/文章/分类/算法/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/index.html"]],
  ["v-029178a9","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/",{"y":"p","t":"字符串"},["/文章/分类/算法/字符串/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/index.html"]],
  ["v-69917db6","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/",{"y":"p","t":"数组"},["/文章/分类/算法/数组/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/index.html"]],
  ["v-2afd7815","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/",{"y":"p","t":"栈和队列"},["/文章/分类/算法/栈和队列/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/index.html"]],
  ["v-33d31544","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/",{"y":"p","t":"链表"},["/文章/分类/算法/链表/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/index.html"]],
  ["v-6bc21c68","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/git%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/",{"y":"p","t":"Git使用技巧"},["/文章/分类/项目总结/git使用技巧/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/git%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/index.html"]],
  ["v-18047b0e","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/",{"y":"p","t":"项目总结"},["/文章/分类/项目总结/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/index.html"]],
  ["v-8685ed74","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/",{"y":"p","t":"个人博客网站"},["/文章/分类/项目总结/个人博客网站/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/index.html"]],
  ["v-32d5f586","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E8%BF%90%E8%90%A5%E5%B9%B3%E5%8F%B0/",{"y":"p","t":"运营平台"},["/文章/分类/项目总结/运营平台/","/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/%E8%BF%90%E8%90%A5%E5%B9%B3%E5%8F%B0/index.html"]],
  ["v-5bc93818","/category/",{"y":"p","t":"分类","I":0},["/category/index.html"]],
  ["v-744d024e","/tag/",{"y":"p","t":"标签","I":0},["/tag/index.html"]],
  ["v-e52c881c","/article/",{"y":"p","t":"文章","I":0},["/article/index.html"]],
  ["v-154dc4c4","/star/",{"y":"p","t":"收藏","I":0},["/star/index.html"]],
  ["v-01560935","/timeline/",{"y":"p","t":"时间轴","I":0},["/timeline/index.html"]],
  ["v-3d184cee","/category/js/",{"y":"p","t":"js 分类","I":0},["/category/js/index.html"]],
  ["v-7329824f","/tag/%E7%AC%94%E8%AE%B0/",{"y":"p","t":"笔记 标签","I":0},["/tag/笔记/","/tag/%E7%AC%94%E8%AE%B0/index.html"]],
  ["v-67483220","/category/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",{"y":"p","t":"学习笔记 分类","I":0},["/category/学习笔记/","/category/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/index.html"]],
  ["v-3b493a28","/tag/ajax%E8%AF%B7%E6%B1%82/",{"y":"p","t":"AJAX请求 标签","I":0},["/tag/ajax请求/","/tag/ajax%E8%AF%B7%E6%B1%82/index.html"]],
  ["v-58561aba","/category/ecmascript/",{"y":"p","t":"ECMAScript 分类","I":0},["/category/ecmascript/index.html"]],
  ["v-b3126996","/tag/es6/",{"y":"p","t":"es6 标签","I":0},["/tag/es6/index.html"]],
  ["v-65f6d381","/category/vue/",{"y":"p","t":"vue 分类","I":0},["/category/vue/index.html"]],
  ["v-58823e1a","/tag/%E5%89%8D%E7%AB%AF%E8%80%83%E6%A0%B8%E9%A2%98/",{"y":"p","t":"前端考核题 标签","I":0},["/tag/前端考核题/","/tag/%E5%89%8D%E7%AB%AF%E8%80%83%E6%A0%B8%E9%A2%98/index.html"]],
  ["v-1d3b3892","/category/%E9%9D%A2%E8%AF%95%E8%80%83%E6%A0%B8%E6%80%BB%E7%BB%93/",{"y":"p","t":"面试考核总结 分类","I":0},["/category/面试考核总结/","/category/%E9%9D%A2%E8%AF%95%E8%80%83%E6%A0%B8%E6%80%BB%E7%BB%93/index.html"]],
  ["v-35818c74","/tag/%E9%9D%A2%E8%AF%95%E9%A2%98/",{"y":"p","t":"面试题 标签","I":0},["/tag/面试题/","/tag/%E9%9D%A2%E8%AF%95%E9%A2%98/index.html"]],
  ["v-227ecbd6","/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",{"y":"p","t":"计算机网络 分类","I":0},["/category/计算机网络/","/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/index.html"]],
  ["v-51aa3ec2","/tag/promise/",{"y":"p","t":"Promise 标签","I":0},["/tag/promise/index.html"]],
  ["v-58de6733","/category/vite/",{"y":"p","t":"vite 分类","I":0},["/category/vite/index.html"]],
  ["v-751f66af","/tag/this%E6%8C%87%E5%90%91%E9%97%AE%E9%A2%98/",{"y":"p","t":"this指向问题 标签","I":0},["/tag/this指向问题/","/tag/this%E6%8C%87%E5%90%91%E9%97%AE%E9%A2%98/index.html"]],
  ["v-4eb18eb1","/category/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/",{"y":"p","t":"前端工程化 分类","I":0},["/category/前端工程化/","/category/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/index.html"]],
  ["v-31f58c60","/tag/js%E5%9F%BA%E7%A1%80/",{"y":"p","t":"js基础 标签","I":0},["/tag/js基础/","/tag/js%E5%9F%BA%E7%A1%80/index.html"]],
  ["v-06be9332","/category/%E7%AE%97%E6%B3%95/",{"y":"p","t":"算法 分类","I":0},["/category/算法/","/category/%E7%AE%97%E6%B3%95/index.html"]],
  ["v-7812146a","/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",{"y":"p","t":"计算机网络 标签","I":0},["/tag/计算机网络/","/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/index.html"]],
  ["v-77af4707","/category/git%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/",{"y":"p","t":"git使用技巧 分类","I":0},["/category/git使用技巧/","/category/git%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/index.html"]],
  ["v-481d9cc0","/tag/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/",{"y":"p","t":"前端工程化构建工具 标签","I":0},["/tag/前端工程化构建工具/","/tag/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/index.html"]],
  ["v-206dfa1c","/category/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/",{"y":"p","t":"项目总结 分类","I":0},["/category/项目总结/","/category/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/index.html"]],
  ["v-46b9d66c","/tag/leetcode/",{"y":"p","t":"leetcode 标签","I":0},["/tag/leetcode/index.html"]],
  ["v-0e611ade","/tag/%E9%83%A8%E7%BD%B2/",{"y":"p","t":"部署 标签","I":0},["/tag/部署/","/tag/%E9%83%A8%E7%BD%B2/index.html"]],
]
