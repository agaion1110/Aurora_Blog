export const data = JSON.parse("{\"key\":\"v-240be836\",\"path\":\"/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%89%93%E5%8D%B0%E4%BB%8E1%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84n%E4%BD%8D%E6%95%B0.html\",\"title\":\"打印从1到最大的n位数\",\"lang\":\"zh-CN\",\"frontmatter\":{\"icon\":\"edit\",\"date\":\"2023-08-20T00:00:00.000Z\",\"category\":[\"算法\"],\"tag\":[\"leetcode\"],\"star\":3810,\"sticky\":true,\"pageview\":true,\"copy.disableCopy\":true,\"description\":\"打印从1到最大的n位数 题目 输入数字 n，按顺序打印出从 1 到最大的 n 位十进制数。比如输入 3，则打印出 1、2、3 一直到最大的 3 位数 999。 示例 1: 输入: n = 1 输出: [1,2,3,4,5,6,7,8,9] 分析： 若不考虑大数问题，则十分简单一个从1到最大数的循环即可。 若考虑大数问题，则首先需要将数字转成字符串避免溢出，然后全排列字符串的第0位到第n-1位。 存储结果时需去掉字符串前几位的0(例如：0099的0没有意义，应为99)再放入结果。\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://wei-z.top/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%89%93%E5%8D%B0%E4%BB%8E1%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84n%E4%BD%8D%E6%95%B0.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Aurora's Blog\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"打印从1到最大的n位数\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"打印从1到最大的n位数 题目 输入数字 n，按顺序打印出从 1 到最大的 n 位十进制数。比如输入 3，则打印出 1、2、3 一直到最大的 3 位数 999。 示例 1: 输入: n = 1 输出: [1,2,3,4,5,6,7,8,9] 分析： 若不考虑大数问题，则十分简单一个从1到最大数的循环即可。 若考虑大数问题，则首先需要将数字转成字符串避免溢出，然后全排列字符串的第0位到第n-1位。 存储结果时需去掉字符串前几位的0(例如：0099的0没有意义，应为99)再放入结果。\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Aurora\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"leetcode\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2023-08-20T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"打印从1到最大的n位数\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2023-08-20T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Aurora\\\",\\\"url\\\":\\\"https://gitee.com/agaion1110\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"题目\",\"slug\":\"题目\",\"link\":\"#题目\",\"children\":[]},{\"level\":2,\"title\":\"解题思路\",\"slug\":\"解题思路\",\"link\":\"#解题思路\",\"children\":[{\"level\":3,\"title\":\"不考虑大数\",\"slug\":\"不考虑大数\",\"link\":\"#不考虑大数\",\"children\":[]},{\"level\":3,\"title\":\"考虑大数\",\"slug\":\"考虑大数\",\"link\":\"#考虑大数\",\"children\":[]}]}],\"readingTime\":{\"minutes\":2.25,\"words\":676},\"filePathRelative\":\"文章/分类/算法/字符串/打印从1到最大的n位数.md\",\"localizedDate\":\"2023年8月20日\",\"excerpt\":\"<h1> 打印从1到最大的n位数</h1>\\n<h2> 题目</h2>\\n<p>输入数字 <code>n</code>，按顺序打印出从 1 到最大的 n 位十进制数。比如输入 3，则打印出 1、2、3 一直到最大的 3 位数 999。</p>\\n<p><strong>示例 1:</strong></p>\\n<div class=\\\"language-text line-numbers-mode\\\" data-ext=\\\"text\\\"><pre class=\\\"language-text\\\"><code>输入: n = 1\\n输出: [1,2,3,4,5,6,7,8,9]\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div><blockquote>\\n<p><strong>分析：</strong></p>\\n<p>若不考虑大数问题，则十分简单一个从1到最大数的循环即可。 若考虑大数问题，则首先需要将数字转成字符串避免溢出，然后全排列字符串的第0位到第n-1位。 存储结果时需去掉字符串前几位的0(例如：0099的0没有意义，应为99)再放入结果。</p>\\n</blockquote>\\n\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
