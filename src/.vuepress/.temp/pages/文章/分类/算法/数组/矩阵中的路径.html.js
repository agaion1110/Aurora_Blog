<<<<<<< HEAD
export const data = JSON.parse("{\"key\":\"v-5551dc70\",\"path\":\"/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84.html\",\"title\":\"矩阵中的路径\",\"lang\":\"zh-CN\",\"frontmatter\":{\"icon\":\"edit\",\"date\":\"2023-07-27T00:00:00.000Z\",\"category\":[\"算法\"],\"tag\":[\"leetcode\"],\"star\":3727,\"sticky\":true,\"pageview\":true,\"copy.disableCopy\":true,\"description\":\"矩阵中的路径 题目 给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。 单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。 例如，在下面的 3×4 的矩阵中包含单词 \\\"ABCCED\\\"（单词中的字母已标出）。\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://wei-z.top/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Aurora's Blog\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"矩阵中的路径\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"矩阵中的路径 题目 给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。 单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。 例如，在下面的 3×4 的矩阵中包含单词 \\\"ABCCED\\\"（单词中的字母已标出）。\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2023-08-11T07:39:11.000Z\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Aurora\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"leetcode\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2023-07-27T00:00:00.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2023-08-11T07:39:11.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"矩阵中的路径\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2023-07-27T00:00:00.000Z\\\",\\\"dateModified\\\":\\\"2023-08-11T07:39:11.000Z\\\",\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Aurora\\\",\\\"url\\\":\\\"https://gitee.com/agaion1110\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"题目\",\"slug\":\"题目\",\"link\":\"#题目\",\"children\":[]},{\"level\":2,\"title\":\"解题思路\",\"slug\":\"解题思路\",\"link\":\"#解题思路\",\"children\":[]}],\"git\":{\"createdTime\":1691739551000,\"updatedTime\":1691739551000,\"contributors\":[{\"name\":\"Aurora\",\"email\":\"1852831787@qq.com\",\"commits\":1}]},\"readingTime\":{\"minutes\":2.13,\"words\":638},\"filePathRelative\":\"文章/分类/算法/数组/矩阵中的路径.md\",\"localizedDate\":\"2023年7月27日\",\"excerpt\":\"<h1> 矩阵中的路径</h1>\\n<h2> 题目</h2>\\n<p>给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。</p>\\n<p>单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。</p>\\n<p>例如，在下面的 3×4 的矩阵中包含单词 \\\"ABCCED\\\"（单词中的字母已标出）。</p>\\n<figure><img src=\\\"https://assets.leetcode.com/uploads/2020/11/04/word2.jpg\\\" alt=\\\"\\\" tabindex=\\\"0\\\" loading=\\\"lazy\\\"><figcaption></figcaption></figure>\",\"autoDesc\":true}")
=======
export const data = JSON.parse("{\"key\":\"v-5551dc70\",\"path\":\"/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84.html\",\"title\":\"矩阵中的路径\",\"lang\":\"zh-CN\",\"frontmatter\":{\"icon\":\"edit\",\"date\":\"2023-07-27T00:00:00.000Z\",\"category\":[\"算法\"],\"tag\":[\"leetcode\"],\"star\":3727,\"sticky\":true,\"pageview\":true,\"copy.disableCopy\":true,\"description\":\"矩阵中的路径 题目 给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。 单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。 例如，在下面的 3×4 的矩阵中包含单词 \\\"ABCCED\\\"（单词中的字母已标出）。\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://wei-z.top/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Aurora's Blog\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"矩阵中的路径\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"矩阵中的路径 题目 给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。 单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。 例如，在下面的 3×4 的矩阵中包含单词 \\\"ABCCED\\\"（单词中的字母已标出）。\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Aurora\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"leetcode\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2023-07-27T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"矩阵中的路径\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2023-07-27T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Aurora\\\",\\\"url\\\":\\\"https://gitee.com/agaion1110\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"题目\",\"slug\":\"题目\",\"link\":\"#题目\",\"children\":[]},{\"level\":2,\"title\":\"解题思路\",\"slug\":\"解题思路\",\"link\":\"#解题思路\",\"children\":[]}],\"readingTime\":{\"minutes\":2.13,\"words\":638},\"filePathRelative\":\"文章/分类/算法/数组/矩阵中的路径.md\",\"localizedDate\":\"2023年7月27日\",\"excerpt\":\"<h1> 矩阵中的路径</h1>\\n<h2> 题目</h2>\\n<p>给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。</p>\\n<p>单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。</p>\\n<p>例如，在下面的 3×4 的矩阵中包含单词 \\\"ABCCED\\\"（单词中的字母已标出）。</p>\\n<figure><img src=\\\"https://assets.leetcode.com/uploads/2020/11/04/word2.jpg\\\" alt=\\\"\\\" tabindex=\\\"0\\\" loading=\\\"lazy\\\"><figcaption></figcaption></figure>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
>>>>>>> main
