export const data = JSON.parse("{\"key\":\"v-978de902\",\"path\":\"/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/this_problem/%E6%94%B9%E5%8F%98this%E6%8C%87%E5%90%91.html\",\"title\":\"改变this指向\",\"lang\":\"zh-CN\",\"frontmatter\":{\"icon\":\"edit\",\"date\":\"2023-07-01T00:00:00.000Z\",\"category\":[\"js\"],\"tag\":[\"this指向问题\",\"面试题\"],\"star\":true,\"sticky\":true,\"copy.disableCopy\":true,\"description\":\"改变this指向 与其他语言相比，函数的 this 关键字在 JavaScript 中的表现略有不同，此外，在严格模式和非严格模式之间也会有一些差别。 在绝大多数情况下，函数的调用方式决定了 this 的值（运行时绑定）。this 不能在执行期间被赋值，并且在每次函数被调用时 this 的值也可能会不同。ES5 引入了 bind 方法来设置函数的 this 值，而不用考虑函数如何被调用的。ES2015 引入了箭头函数，箭头函数不提供自身的 this 绑定（this 的值将保持为闭合词法上下文的值）。\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://wei-z.top/%E6%96%87%E7%AB%A0/%E5%88%86%E7%B1%BB/js/this_problem/%E6%94%B9%E5%8F%98this%E6%8C%87%E5%90%91.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Aurora's Blog\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"改变this指向\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"改变this指向 与其他语言相比，函数的 this 关键字在 JavaScript 中的表现略有不同，此外，在严格模式和非严格模式之间也会有一些差别。 在绝大多数情况下，函数的调用方式决定了 this 的值（运行时绑定）。this 不能在执行期间被赋值，并且在每次函数被调用时 this 的值也可能会不同。ES5 引入了 bind 方法来设置函数的 this 值，而不用考虑函数如何被调用的。ES2015 引入了箭头函数，箭头函数不提供自身的 this 绑定（this 的值将保持为闭合词法上下文的值）。\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2023-07-22T08:43:51.000Z\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Aurora\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"this指向问题\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"面试题\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2023-07-01T00:00:00.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2023-07-22T08:43:51.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"改变this指向\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2023-07-01T00:00:00.000Z\\\",\\\"dateModified\\\":\\\"2023-07-22T08:43:51.000Z\\\",\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Aurora\\\",\\\"url\\\":\\\"https://gitee.com/agaion1110\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"改变this指向的方法\",\"slug\":\"改变this指向的方法\",\"link\":\"#改变this指向的方法\",\"children\":[]}],\"git\":{\"createdTime\":1689600004000,\"updatedTime\":1690015431000,\"contributors\":[{\"name\":\"‘洋芋炒Ç土豆’\",\"email\":\"‘1852831787@qq.com’\",\"commits\":3}]},\"readingTime\":{\"minutes\":3.02,\"words\":906},\"filePathRelative\":\"文章/分类/js/this_problem/改变this指向.md\",\"localizedDate\":\"2023年7月1日\",\"excerpt\":\"<h1> 改变this指向</h1>\\n<p>与其他语言相比，<strong>函数的 <code>this</code> 关键字</strong>在 JavaScript 中的表现略有不同，此外，在<a href=\\\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Strict_mode\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">严格模式</a>和非严格模式之间也会有一些差别。</p>\\n<p>在绝大多数情况下，函数的调用方式决定了 <code>this</code> 的值（运行时绑定）。<code>this</code> 不能在执行期间被赋值，并且在每次函数被调用时 <code>this</code> 的值也可能会不同。ES5 引入了 <a href=\\\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">bind</a> 方法来设置函数的 <code>this</code> 值，而不用考虑函数如何被调用的。ES2015 引入了<a href=\\\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">箭头函数</a>，箭头函数不提供自身的 this 绑定（<code>this</code> 的值将保持为闭合词法上下文的值）。</p>\\n\",\"autoDesc\":true}")
